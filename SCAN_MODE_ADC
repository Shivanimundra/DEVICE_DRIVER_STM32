#include "Stm32f407xx.h"
uint32_t value =0, value1 = 0, value2=0, value3=0;
void adc_enable(void);
int adc_read(int);
void gpio_config(void);
int count =0,i=0;
int main()
{
	adc_enable();
	gpio_config();
  
	
      while(1)
    {
       
       adc_read(2);
			//for(int a=0; a<50000; a++);
			//adc_enable();
			//adc_read(1);
			//for(int a=0; a<50000; a++);
			//adc_enable();
			//adc_read(2);
			//for(int a=0; a<50000; a++);

    }	

}	
 void gpio_config()
{
 RCC->AHB1ENR |= 0X01; // PORT A clock enable
 GPIOA->MODER |= 0X3F;	// ANALOG MODE for PA0,PA1,PA2
 GPIOA->PUPDR &= 0X00;	// NO PUSH-PULL
}	
 void adc_enable()
{
	RCC->APB2ENR |= 0X100; // clock enable FOR ADC1
	ADC1->CR1 |= 0X100; // SCAN MODE ENABLE
  ADC1->CR2 |= 0X401;  //ADON = 1,CONT=1,EOCS=1
	ADC1->SQR1|= 0X300000; // 3 CONVERSION
  ADC->CCR |= 0X20000; // prescalar = 6
	ADC1->SMPR2 |= 0X1FF;  // FOR 480 CYCLES
	
}	
int adc_read(int channel)
{
	ADC1->SQR3 |= channel;
	ADC1->CR2 |= 0X40000000;// SWSTART=1
	
	while(!((ADC1->SR)&(0x02)))
	{
	   count++;
	} 	
  while((ADC1->SR)&(0x02)) // if EOC=1
 {
	
	    value = ADC1->DR;
      ADC1->CR2 &= 0X00000000; // ADON = 0
		  ADC1->SR &=0X01; // EOC=0	
  }
	return value;
		 
}	
